---
/* IntroAnimation component: typewriter + stop-motion dump-truck animation */
---
<style>
  .intro-container {
    position: fixed;
    inset: 0;
    background: #f8f9fa;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    font-family: 'Comic Sans MS', cursive, sans-serif;
  }

  .typewriter {
    font-size: 1.8rem;
    color: #2d3748;
    white-space: nowrap;
    overflow: hidden;
    border-right: 3px solid #4a5568;
    width: 0;
    animation: typing-realistic 6s steps(60) forwards, blink 0.8s step-end infinite;
    text-align: center;
    max-width: 90%;
    margin-bottom: 2rem;
  }

  @keyframes typing-realistic {
    0% { width: 0; }
    15% { width: 15%; }
    20% { width: 15%; } /* pause after "Hi there!" */
    25% { width: 20%; }
    60% { width: 85%; }
    65% { width: 85%; } /* pause after period */
    100% { width: 100%; }
  }

  @keyframes blink {
    50% { border-color: transparent; }
  }

  .truck-scene {
    position: relative;
    width: 500px;
    height: 300px;
    overflow: visible;
  }

  /* Simple truck that's always visible */
  .truck-container {
    position: relative;
    width: 100%;
    height: 100%;
  }

  .truck-svg {
    width: 100%;
    height: 100%;
    display: block;
  }

  /* Dump bed animation */
  .dump-bed {
    transform-origin: 180px 120px;
    transition: transform 1s ease-in-out;
  }

  .dump-bed.dumping {
    transform: rotate(-45deg);
  }

  /* Letter physics */
  .letter {
    position: absolute;
    font-family: 'Comic Sans MS', cursive;
    font-weight: bold;
    font-size: 2rem;
    color: #e53e3e;
    z-index: 10;
    pointer-events: none;
    opacity: 0;
    user-select: none;
    transition: all 1.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .letter.falling {
    opacity: 1;
  }

  /* Truck exit animation */
  .truck-container.driving-away {
    animation: drive-away 3s ease-in forwards;
    animation-delay: 9s;
  }

  @keyframes drive-away {
    to { transform: translateX(120vw); }
  }

  /* Fade out */
  .intro-container.fade-out {
    animation: fade-out 1s ease-out forwards;
  }

  @keyframes fade-out {
    to {
      opacity: 0;
      pointer-events: none;
    }
  }
</style>

<div class="intro-container" id="introContainer">
  <div class="typewriter" id="typewriterText">Hi there! From here onwards, please drop off all your worries.</div>
  
  <div class="truck-scene">
    <div class="truck-container" id="truckContainer">
      <svg class="truck-svg" viewBox="0 0 500 300">
        <!-- Truck body - kids drawing style -->
        <g stroke="#2d3748" stroke-width="4" fill="none" stroke-linecap="round" stroke-linejoin="round">
          <!-- Main truck body -->
          <path d="M80 200 Q78 195 85 200 L85 140 Q83 135 90 140 L170 140 Q168 135 175 140 L175 120 Q173 115 180 120 L320 120 Q318 115 325 120 L325 200" 
                fill="#ff6b6b"/>
          
          <!-- Truck cab -->
          <path d="M175 140 Q173 135 180 140 L180 90 Q178 85 185 90 L280 90 Q278 85 285 90 L285 140" 
                fill="#4ecdc4"/>
          
          <!-- Cab window -->
          <rect x="190" y="100" width="80" height="30" fill="#87ceeb" stroke-width="2"/>
          
          <!-- Front bumper -->
          <path d="M325 120 Q323 115 330 120 L350 120 Q348 115 355 120 L355 180 Q353 175 350 180 L325 180" 
                fill="#ffd93d"/>
          
          <!-- Wheels with wobbly circles -->
          <circle cx="130" cy="210" r="22" fill="#2d3748" stroke-width="3"/>
          <circle cx="130" cy="210" r="12" fill="#718096" stroke-width="2"/>
          <circle cx="280" cy="210" r="22" fill="#2d3748" stroke-width="3"/>
          <circle cx="280" cy="210" r="12" fill="#718096" stroke-width="2"/>
          
          <!-- Dump bed (animated) -->
          <g class="dump-bed" id="dumpBed">
            <!-- Empty truck bed initially -->
            <rect x="90" y="100" width="80" height="40" fill="#ffe66d" stroke-width="3"/>
            <!-- No text initially -->
          </g>
          
          <!-- Truck details -->
          <circle cx="200" cy="105" r="3" fill="#2d3748"/> <!-- headlight -->
          <rect x="290" y="100" width="15" height="8" fill="#ff6b6b" stroke-width="1"/> <!-- door handle -->
        </g>
      </svg>
    </div>

    <!-- Letters container for physics simulation -->
    <div id="letterContainer"></div>
  </div>
</div>

<script>
(function() {
  // Check if intro was already played this session
  if (sessionStorage.getItem('introPlayed')) {
    const container = document.getElementById('introContainer');
    if (container) container.remove();
    return;
  }

  // Mark as played
  sessionStorage.setItem('introPlayed', 'true');

  const introContainer = document.getElementById('introContainer');
  const truckContainer = document.getElementById('truckContainer');
  const letterContainer = document.getElementById('letterContainer');
  const dumpBed = document.getElementById('dumpBed');

  // Extract letters from typewriter text and animate them
  function extractAndDumpLetters() {
    const typewriterEl = document.getElementById('typewriterText');
    
    const fullText = typewriterEl.textContent;
    const wordToExtract = 'worries';
    const letters = wordToExtract.split('');
    
    const newText = fullText.replace(wordToExtract, '______');
    typewriterEl.textContent = newText;
    
    const bedText = document.createElementNS('http://www.w3.org/2000/svg', 'text');
    bedText.setAttribute('x', '130');
    bedText.setAttribute('y', '125');
    bedText.setAttribute('font-family', 'Comic Sans MS');
    bedText.setAttribute('font-size', '16');
    bedText.setAttribute('fill', '#e53e3e');
    bedText.setAttribute('text-anchor', 'middle');
    bedText.textContent = wordToExtract;
    dumpBed.appendChild(bedText);
    
    setTimeout(() => {
      dumpBed.classList.add('dumping');
    }, 1000);

    setTimeout(() => {
      bedText.remove();
      
      letters.forEach((char, index) => {
        const letterEl = document.createElement('div');
        letterEl.className = 'letter';
        letterEl.textContent = char;
        
        const startX = 130;
        const startY = 120;
        
        letterEl.style.left = `${startX}px`;
        letterEl.style.top = `${startY}px`;
        
        letterContainer.appendChild(letterEl);

        setTimeout(() => {
          const horizontalSpread = (index - (letters.length - 1) / 2) * 40;
          const verticalDrop = Math.random() * 30 + 150; // 150-180px drop
          const rotation = (Math.random() - 0.5) * 360;

          letterEl.style.transform = `translate(${horizontalSpread}px, ${verticalDrop}px) rotate(${rotation}deg)`;
          letterEl.classList.add('falling');
        }, index * 100); // Delay for each letter to create unique trajectory
      });
    }, 2000);
  }

  // Animation timeline
  setTimeout(extractAndDumpLetters, 7000); // Wait for typing to finish

  setTimeout(() => {
    // Start truck driving away
    if (truckContainer) {
      truckContainer.classList.add('driving-away');
    }
  }, 12000);

  setTimeout(() => {
    // Fade out everything
    if (introContainer) {
      introContainer.classList.add('fade-out');
      setTimeout(() => {
        introContainer.remove();
      }, 1000);
    }
  }, 16000);

})();
</script>
