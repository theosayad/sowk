---
/* IntroAnimation component: typewriter + stop-motion dump-truck animation */
---
<style>
  .intro-container {
    position: fixed;
    inset: 0;
    background: #f8f9fa;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    font-family: 'Comic Sans MS', cursive, sans-serif;
  }

  .typewriter {
    font-size: 1.8rem;
    color: #2d3748;
    white-space: nowrap;
    overflow: hidden;
    border-right: 3px solid #4a5568;
    width: 0;
    animation: typing 4s steps(60) forwards, blink 0.8s step-end infinite;
    text-align: center;
    max-width: 90%;
    margin-bottom: 2rem;
  }

  @keyframes typing {
    from { width: 0; }
    to { width: 100%; }
  }

  @keyframes blink {
    50% { border-color: transparent; }
  }

  .truck-scene {
    position: relative;
    width: 500px;
    height: 300px;
    overflow: visible;
  }

  /* Simple truck that's always visible */
  .truck-container {
    position: relative;
    width: 100%;
    height: 100%;
  }

  .truck-svg {
    width: 100%;
    height: 100%;
    display: block;
  }

  /* Dump bed animation */
  .dump-bed {
    transform-origin: 180px 120px;
    animation: bed-dump 4s ease-in-out forwards;
    animation-delay: 5s;
  }

  @keyframes bed-dump {
    0% { transform: rotate(0deg); }
    25% { transform: rotate(-45deg); }
    75% { transform: rotate(-45deg); }
    100% { transform: rotate(0deg); }
  }

  /* Letter physics */
  .letter {
    position: absolute;
    font-family: 'Comic Sans MS', cursive;
    font-weight: bold;
    font-size: 2rem;
    color: #e53e3e;
    z-index: 10;
    pointer-events: none;
    opacity: 0;
    user-select: none;
  }

  .letter.falling {
    opacity: 1;
    animation: realistic-fall 3s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
  }

  @keyframes realistic-fall {
    0% {
      transform: translate(0, 0) rotate(0deg);
    }
    25% {
      transform: translate(var(--mid-x), var(--mid-y)) rotate(var(--mid-rotation));
    }
    100% {
      transform: translate(var(--end-x), var(--end-y)) rotate(var(--end-rotation));
    }
  }

  /* Truck exit animation */
  .truck-container.driving-away {
    animation: drive-away 3s ease-in forwards;
    animation-delay: 9s;
  }

  @keyframes drive-away {
    to { transform: translateX(120vw); }
  }

  /* Fade out */
  .intro-container.fade-out {
    animation: fade-out 1s ease-out forwards;
  }

  @keyframes fade-out {
    to {
      opacity: 0;
      pointer-events: none;
    }
  }
</style>

<div class="intro-container" id="introContainer">
  <div class="typewriter">Hi there! From here onwards, please drop off all your worries and stresses.</div>
  
  <div class="truck-scene">
    <div class="truck-container" id="truckContainer">
      <svg class="truck-svg" viewBox="0 0 500 300">
        <!-- Truck body - kids drawing style -->
        <g stroke="#2d3748" stroke-width="4" fill="none" stroke-linecap="round" stroke-linejoin="round">
          <!-- Main truck body -->
          <path d="M80 200 Q78 195 85 200 L85 140 Q83 135 90 140 L170 140 Q168 135 175 140 L175 120 Q173 115 180 120 L320 120 Q318 115 325 120 L325 200" 
                fill="#ff6b6b"/>
          
          <!-- Truck cab -->
          <path d="M175 140 Q173 135 180 140 L180 90 Q178 85 185 90 L280 90 Q278 85 285 90 L285 140" 
                fill="#4ecdc4"/>
          
          <!-- Cab window -->
          <rect x="190" y="100" width="80" height="30" fill="#87ceeb" stroke-width="2"/>
          
          <!-- Front bumper -->
          <path d="M325 120 Q323 115 330 120 L350 120 Q348 115 355 120 L355 180 Q353 175 350 180 L325 180" 
                fill="#ffd93d"/>
          
          <!-- Wheels with wobbly circles -->
          <circle cx="130" cy="210" r="22" fill="#2d3748" stroke-width="3"/>
          <circle cx="130" cy="210" r="12" fill="#718096" stroke-width="2"/>
          <circle cx="280" cy="210" r="22" fill="#2d3748" stroke-width="3"/>
          <circle cx="280" cy="210" r="12" fill="#718096" stroke-width="2"/>
          
          <!-- Dump bed (animated) -->
          <g class="dump-bed" id="dumpBed">
            <rect x="90" y="100" width="80" height="40" fill="#ffe66d" stroke-width="3"/>
            <!-- Letters in truck bed initially -->
            <text x="130" y="125" font-family="Comic Sans MS" font-size="16" fill="#e53e3e" text-anchor="middle" id="bedText">worries stresses</text>
          </g>
          
          <!-- Truck details -->
          <circle cx="200" cy="105" r="3" fill="#2d3748"/> <!-- headlight -->
          <rect x="290" y="100" width="15" height="8" fill="#ff6b6b" stroke-width="1"/> <!-- door handle -->
        </g>
      </svg>
    </div>

    <!-- Letters container for physics simulation -->
    <div id="letterContainer"></div>
  </div>
</div>

<script>
(function() {
  // Check if intro was already played this session
  if (sessionStorage.getItem('introPlayed')) {
    const container = document.getElementById('introContainer');
    if (container) container.remove();
    return;
  }

  // Mark as played
  sessionStorage.setItem('introPlayed', 'true');

  const introContainer = document.getElementById('introContainer');
  const truckContainer = document.getElementById('truckContainer');
  const letterContainer = document.getElementById('letterContainer');
  const bedText = document.getElementById('bedText');

  // Letter dumping physics
  function dumpLetters() {
    const letters = 'worries stresses'.split('').filter(char => char !== ' ');
    
    // Hide the text in the truck bed
    if (bedText) bedText.style.opacity = '0';
    
    letters.forEach((char, index) => {
      setTimeout(() => {
        const letterEl = document.createElement('div');
        letterEl.className = 'letter falling';
        letterEl.textContent = char;
        
        // Starting position (truck bed center)
        const startX = 130; // Center of truck bed
        const startY = 120; // Truck bed position
        
        letterEl.style.left = startX + 'px';
        letterEl.style.top = startY + 'px';
        
        // Realistic physics - letters spread out as they fall
        const spreadX = (Math.random() - 0.5) * 200; // -100 to 100px spread
        const fallDistance = 100 + Math.random() * 80; // 100-180px fall
        const bounceX = (Math.random() - 0.5) * 50; // Small bounce spread
        
        // Mid-point for realistic arc
        const midX = spreadX * 0.3;
        const midY = fallDistance * 0.2;
        const midRotation = (Math.random() - 0.5) * 180;
        
        // Final position
        const endX = spreadX + bounceX;
        const endY = fallDistance;
        const endRotation = (Math.random() - 0.5) * 360;
        
        letterEl.style.setProperty('--mid-x', midX + 'px');
        letterEl.style.setProperty('--mid-y', midY + 'px');
        letterEl.style.setProperty('--mid-rotation', midRotation + 'deg');
        letterEl.style.setProperty('--end-x', endX + 'px');
        letterEl.style.setProperty('--end-y', endY + 'px');
        letterEl.style.setProperty('--end-rotation', endRotation + 'deg');
        
        letterContainer.appendChild(letterEl);
      }, index * 150); // Stagger the drops
    });
  }

  // Animation timeline
  setTimeout(() => {
    // Start dumping letters when bed tilts
    dumpLetters();
  }, 6000);

  setTimeout(() => {
    // Start truck driving away
    if (truckContainer) {
      truckContainer.classList.add('driving-away');
    }
  }, 9000);

  setTimeout(() => {
    // Fade out everything
    if (introContainer) {
      introContainer.classList.add('fade-out');
      setTimeout(() => {
        introContainer.remove();
      }, 1000);
    }
  }, 13000);

})();
</script>
